<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Developer&#39;s Guide on </title>
    <link>https://frisbee.dev/docs/developers-guide/</link>
    <description>Recent content in Developer&#39;s Guide on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://frisbee.dev/docs/developers-guide/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Add New Frisbee ControllerÂ¶</title>
      <link>https://frisbee.dev/docs/developers-guide/new-controller/</link>
      <pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://frisbee.dev/docs/developers-guide/new-controller/</guid>
      <description>There are two ways to run a Frisbee controller.
As a container inside a Kubernetes cluster. As Go program outside a cluster. The container approach is production-ready and does not require any compilation or dependencies.
Unfortunately though, bugs may arise and features may be needed.
And since it is inconvenient to create and deploy a new container while you are still debugging the controller, the second approach is preffered for development purposes.</description>
    </item>
    
    <item>
      <title>Develop a Chart</title>
      <link>https://frisbee.dev/docs/developers-guide/new-chart/</link>
      <pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://frisbee.dev/docs/developers-guide/new-chart/</guid>
      <description>This is a guide for those who wish to contribute new Charts in Frisbee.
Because there is an overlap, we advise you to have a look at the Guide for Code Developers first.
What is a Helm Chart ? Helm is a package manager for Kubernetes.
Helm uses a packaging format called charts. A chart is a collection of files that describe a related set of Kubernetes resources. A single chart might be used to deploy something simple, like a memcached pod, or something complex, like a full web app stack with HTTP servers, databases, caches, and so on.</description>
    </item>
    
  </channel>
</rss>
