<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docs on </title>
    <link>https://frisbee.dev/docs/</link>
    <description>Recent content in Docs on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 30 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://frisbee.dev/docs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Frisbee Overview</title>
      <link>https://frisbee.dev/docs/about/what-is-frisbee/</link>
      <pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://frisbee.dev/docs/about/what-is-frisbee/</guid>
      <description>Frisbee Overview Frisbee is an open source cloud-native platform intended for engineers and researchers looking to explore, test, and benchmark distributed applications faster and more reliably. It offers various types of fault simulation and has an enormous capability to orchestrate complex scenarios in the domains of:
Cloud Databases Federated Learning Frameworks Telecommunication services Blockchain applications IoT applications Frisbee is implemented as a Kubernetes CRD (Custom Resource Definition). As a result, Frisbee workflows can be managed using kubectl and natively integrates with other Kubernetes services such as volumes, secrets, and RBAC.</description>
    </item>
    
    <item>
      <title>Basic Features</title>
      <link>https://frisbee.dev/docs/about/features/</link>
      <pubDate>Thu, 30 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://frisbee.dev/docs/about/features/</guid>
      <description>This document describes the basic features of Frisbee, including Templates, Actions, Scenarios, Visualized Operations, and Security Guarantees.
Templates Templates define minimally constraining skeletons for Services and Faults. When called without parameters, templates generate services initialized with reasonable defaults. With parameters, templates generate the customized configuration by replacing the placeholders (denoted as {{...}}) with the given input. Unlike other engines that evaluate templates at deployment time, Frisbee evaluates them at runtime. This strategy allows us to create a library of frequently-used specifications and use them to generate objects on-demand throughout the experiment.</description>
    </item>
    
    <item>
      <title>Apache License</title>
      <link>https://frisbee.dev/docs/about/license/</link>
      <pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://frisbee.dev/docs/about/license/</guid>
      <description>Version 2.0, January 2004 https://www.apache.org/licenses/LICENSE-2.0
Terms and Conditions for use, reproduction, and distribution
1. Definitions “License” shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document.
“Licensor” shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.
“Legal Entity” shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity.</description>
    </item>
    
  </channel>
</rss>
